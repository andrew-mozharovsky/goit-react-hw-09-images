{"version":3,"sources":["services/services.js","Components/ImageGallery/ImageGallery.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/LoadMore/LoadMore.js","Components/Searchbar/Searchbar.js","Components/Modal/Modal.js","App.js","index.js"],"names":["ApoServices","fetchImage","a","searchQuery","page","fetch","then","r","json","ImageGallery","children","imageClick","onClick","className","ImageGalleryItem","imageArr","map","webformatURL","id","tags","largeImageURL","data-largeurl","src","alt","LoadMore","onChange","type","Searchbar","onSubmit","useState","inputValue","setInputValue","e","preventDefault","currentTarget","value","autoComplete","autoFocus","placeholder","Modal","closeModal","largeImage","useEffect","handleKeyDownEsc","code","window","addEventListener","removeEventListener","target","App","setSearchQuery","images","setImages","setPage","loading","setLoading","showModal","setShowModal","setLargeImage","setAlt","options","imageAPI","hits","prevImages","finally","fetchImages","scrollTo","top","document","documentElement","scrollHeight","behavior","toggleModal","prevVal","LoadMoreButton","length","query","dataset","largeurl","color","height","width","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"gSASeA,EAHK,CAClBC,WAPc,uCAAG,+BAAAC,EAAA,6DAASC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,KAAtB,SACJC,MAAM,8BAAD,OACcF,EADd,iBACkCC,EADlC,gGAEhBE,MAAK,SAACC,GAAD,OAAOA,EAAEC,UAHC,mFAAH,uD,OCSDC,EAPM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAChC,OACE,oBAAIC,QAASD,EAAYE,UAAU,eAAnC,SACGH,KCUQI,EAfU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUH,EAAc,EAAdA,QACpC,OAAOG,EAASC,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cAC7C,OACE,oBAAIR,QAASA,EAAkBC,UAAU,mBAAzC,SACE,qBACEQ,gBAAeD,EACfE,IAAKL,EACLM,IAAKJ,EACLN,UAAU,4BALaK,OCIlBM,EAPE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,wBAAQZ,UAAW,SAAUD,QAASa,EAAUC,KAAK,SAArD,wBCkCWC,EAlCG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,wBAAQlB,UAAU,YAAlB,SACE,uBAAMe,SARW,SAACI,GACpBA,EAAEC,iBACFL,EAASE,GACTC,EAAc,KAKkBlB,UAAU,aAAxC,UACE,wBAAQa,KAAK,SAASb,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEY,SAlBa,SAACO,GACpBD,EAAcC,EAAEE,cAAcC,QAkBxBA,MAAOL,EACPjB,UAAU,mBACVa,KAAK,OACLU,aAAa,MACbC,WAAS,EACTC,YAAY,mCCAPC,EA3BD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,WAAYlB,EAAU,EAAVA,IACvCmB,qBAAU,WACR,IAAMC,EAAmB,SAACX,GACT,WAAXA,EAAEY,MACJJ,KAIJ,OADAK,OAAOC,iBAAiB,UAAWH,GAC5B,WACLE,OAAOE,oBAAoB,UAAWJ,MAEvC,CAACH,IAQJ,OACE,qBAAK3B,UAAU,UAAUD,QAPA,SAACoB,GACtBA,EAAEgB,SAAWhB,EAAEE,eACjBM,KAKF,SACE,qBAAK3B,UAAU,QAAf,SACE,qBAAKS,IAAKmB,EAAYlB,IAAKA,SCoEpB0B,EAlFH,WACV,MAAsCpB,mBAAS,IAA/C,mBAAO1B,EAAP,KAAoB+C,EAApB,KACA,EAA4BrB,mBAAS,IAArC,mBAAOsB,EAAP,KAAeC,EAAf,KACA,EAAwBvB,mBAAS,GAAjC,mBAAOzB,EAAP,KAAaiD,EAAb,KACA,EAA8BxB,oBAAS,GAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KACA,EAAkC1B,oBAAS,GAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KACA,EAAoC5B,mBAAS,IAA7C,mBAAOY,EAAP,KAAmBiB,EAAnB,KACA,EAAsB7B,mBAAS,IAA/B,mBAAON,EAAP,KAAYoC,EAAZ,KAEAjB,qBAAU,WACR,GAAoB,KAAhBvC,EAAJ,EAGoB,WAClBoD,GAAW,GAEX,IAAMK,EAAU,CACdzD,cACAC,QAGFyD,EACG5D,WAAW2D,GACXtD,MAAK,gBAAGwD,EAAH,EAAGA,KAAH,OAAcV,GAAU,SAACW,GAAD,4BAAoBA,GAApB,YAAmCD,UAChEE,QAAQT,GAAW,IAGxBU,MACC,CAAC9D,EAAaC,IAEjBsC,qBAAU,WACRG,OAAOqB,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,cAId,IAMMC,EAAc,WAClBf,GAAa,SAACgB,GAAD,OAAcA,MAQvBC,EAAiBvB,EAAOwB,OAAS,EAMvC,OACE,sBAAK9D,UAAW,YAAhB,UACE,cAAC,EAAD,CAAWe,SAvBO,SAACgD,GACrB1B,EAAe0B,GACfvB,EAAQ,GACRD,EAAU,OAqBR,cAAC,EAAD,CAAczC,WAdI,SAACqB,GACrB0B,EAAc1B,EAAEgB,OAAO6B,QAAQC,UAC/BnB,EAAO3B,EAAEgB,OAAOzB,MAYd,SACE,cAAC,EAAD,CAAkBX,QAAS4D,EAAazD,SAAUoC,MAEnDG,GACC,cAAC,IAAD,CACEzC,UAAW,UACXa,KAAK,OACLqD,MAAM,UACNC,OAAQ,GACRC,MAAO,KAIVP,IAAmBpB,GAAW,cAAC,EAAD,CAAU7B,SApB5B,WACf4B,GAAQ,SAAC6B,GAAD,OAAcA,EAAW,QAoB9B1B,GACC,cAAC,EAAD,CAAOf,WAAYA,EAAYlB,IAAKA,EAAKiB,WAAYgC,QC7E7DW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,W","file":"static/js/main.a8eb80f4.chunk.js","sourcesContent":["const fetchImage = async ({ searchQuery, page }) => {\n  return await fetch(\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=21324374-26e3d3b86bafb4c298c1385cf&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((r) => r.json());\n};\n\nconst ApoServices = {\n  fetchImage,\n};\nexport default ApoServices;\n","import React from \"react\";\n\nconst ImageGallery = ({ children, imageClick }) => {\n  return (\n    <ul onClick={imageClick} className=\"ImageGallery\">\n      {children}\n    </ul>\n  );\n};\nexport default ImageGallery;\n","const ImageGalleryItem = ({ imageArr, onClick }) => {\n  return imageArr.map(({ webformatURL, id, tags, largeImageURL }) => {\n    return (\n      <li onClick={onClick} key={id} className=\"ImageGalleryItem\">\n        <img\n          data-largeurl={largeImageURL}\n          src={webformatURL}\n          alt={tags}\n          className=\"ImageGalleryItem-image\"\n        />\n      </li>\n    );\n  });\n};\n\nexport default ImageGalleryItem;\n","const LoadMore = ({ onChange }) => {\n  return (\n    <button className={\"Button\"} onClick={onChange} type=\"button\">\n      load more\n    </button>\n  );\n};\nexport default LoadMore;\n","import React, { useState } from \"react\";\n\nconst Searchbar = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (e) => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue(\"\");\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          onChange={handleChange}\n          value={inputValue}\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n","import React, { useEffect } from \"react\";\n\nconst Modal = ({ closeModal, largeImage, alt }) => {\n  useEffect(() => {\n    const handleKeyDownEsc = (e) => {\n      if (e.code === \"Escape\") {\n        closeModal();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDownEsc);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDownEsc);\n    };\n  }, [closeModal]);\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={handleOverlayClick}>\n      <div className=\"Modal\">\n        <img src={largeImage} alt={alt} />\n      </div>\n    </div>\n  );\n};\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nimport imageAPI from \"./services/services\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport ImageGalleryItem from \"./Components/ImageGalleryItem\";\nimport LoadMore from \"./Components/LoadMore\";\nimport Searchbar from \"./Components/Searchbar\";\nimport Modal from \"./Components/Modal\";\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImage, setLargeImage] = useState(\"\");\n  const [alt, setAlt] = useState(\"\");\n\n  useEffect(() => {\n    if (searchQuery === \"\") {\n      return;\n    }\n    const fetchImages = () => {\n      setLoading(true);\n\n      const options = {\n        searchQuery,\n        page,\n      };\n\n      imageAPI\n        .fetchImage(options)\n        .then(({ hits }) => setImages((prevImages) => [...prevImages, ...hits]))\n        .finally(setLoading(false));\n    };\n\n    fetchImages();\n  }, [searchQuery, page]);\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  });\n\n  const onChangeQuery = (query) => {\n    setSearchQuery(query);\n    setPage(1);\n    setImages([]);\n  };\n\n  const toggleModal = () => {\n    setShowModal((prevVal) => !prevVal);\n  };\n\n  const getLargeImage = (e) => {\n    setLargeImage(e.target.dataset.largeurl);\n    setAlt(e.target.alt);\n  };\n\n  const LoadMoreButton = images.length > 0;\n\n  const showMore = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  return (\n    <div className={\"container\"}>\n      <Searchbar onSubmit={onChangeQuery} />\n      <ImageGallery imageClick={getLargeImage}>\n        <ImageGalleryItem onClick={toggleModal} imageArr={images} />\n      </ImageGallery>\n      {loading && (\n        <Loader\n          className={\"spinier\"}\n          type=\"Oval\"\n          color=\"#00BFFF\"\n          height={50}\n          width={50}\n        />\n      )}\n\n      {LoadMoreButton && !loading && <LoadMore onChange={showMore} />}\n      {showModal && (\n        <Modal largeImage={largeImage} alt={alt} closeModal={toggleModal} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"modern-normalize\";\nimport \"./styles.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}